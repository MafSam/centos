centosplus patch [bug#12711]

commit 751eb6b6042a596b0080967c1a529a9fe98dac1d
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Mon Sep 5 16:06:31 2016 +0800

    ipv6: addrconf: fix dev refcont leak when DAD failed
                                                        
    In general, when DAD detected IPv6 duplicate address, ifp->state
    will be set to INET6_IFADDR_STATE_ERRDAD and DAD is stopped by a
    delayed work, the call tree should be like this:
                                                                    
    ndisc_recv_ns                                                   
      -> addrconf_dad_failure        <- missing ifp put             
         -> addrconf_mod_dad_work                                   
           -> schedule addrconf_dad_work()                          
             -> addrconf_dad_stop()  <- missing ifp hold before call it
                                                                       
    addrconf_dad_failure() called with ifp refcont holding but not put.
    addrconf_dad_work() call addrconf_dad_stop() without extra holding 
    refcount. This will not cause any issue normally.                  
                                                                       
    But the race between addrconf_dad_failure() and addrconf_dad_work()
    may cause ifp refcount leak and netdevice can not be unregister,   
    dmesg show the following messages:                                 
                                                                       
    IPv6: eth0: IPv6 duplicate address fe80::XX:XXXX:XXXX:XX detected!
    ...
    unregister_netdevice: waiting for eth0 to become free. Usage count = 1

    Cc: stable@vger.kernel.org
    Fixes: c15b1ccadb32 ("ipv6: move DAD and addrconf_verify processing
    to workqueue")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

    Submitted-by: alfredo
    Applied-by: Akemi Yagi <toracat@centos.org>

diff --git a/net/ipv6/addrconf.c b/net/ipv6/addrconf.c
index b7d5ce6..dc65579 100644
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@ -1656,6 +1656,7 @@ void addrconf_dad_failure(struct inet6_ifaddr *ifp)
 	spin_unlock_bh(&ifp->state_lock);
 
 	addrconf_mod_dad_work(ifp, 0);
+    in6_ifa_put(ifp);
 }
 
 /* Join to solicited addr multicast group.
@@ -3300,6 +3301,7 @@ static void addrconf_dad_work(struct work_struct *w)
 		addrconf_dad_begin(ifp);
 		goto out;
 	} else if (action == DAD_ABORT) {
+        in6_ifa_hold(ifp);
 		addrconf_dad_stop(ifp, 1);
 		goto out;
 	}
